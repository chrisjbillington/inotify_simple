name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      PKGVER: ${{ steps.release-info.outputs.PKGVER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python tools
        run: python -m pip install --upgrade pip setuptools wheel build

      - name: Source distribution
        run: python -m build -s .

      - name: Wheel distribution
        run: python -m build -w .

      - name: Get release info
        id: release-info
        run: |
          # Get version:
          PKGVER=$(python -c "import inotify_simple; print(inotify_simple.__version__)")
          echo "PKGVER=${PKGVER}" >> "${GITHUB_OUTPUT}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          if-no-files-found: error

  github-release:
    name: Publish release (GitHub)
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    env:
      PKGVER: ${{ needs.build.outputs.PKGVER }}

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Create GitHub release and upload release asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.ref }}
          name: inotify-simple ${{ env.PKGVER }}
          draft: true
          prerelease: ${{ contains(github.event.ref, 'rc') }}
          files: ./dist/*.tar.gz

  testpypi-upload:
    name: Publish on Test PyPI
    runs-on: ubuntu-latest
    needs: [build]
    if: "!startsWith(github.ref, 'refs/tags/')"
    env:
      PKGVER: ${{ needs.build.outputs.PKGVER }}
    environment:
      name: testpypi
      url: https://test.pypi.org/project/inotify-simple/${{ env.PKGVER }}
    permissions:
      id-token: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Publish on TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true


  pypi-upload:
    name: Publish on PyPI
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      PKGVER: ${{ needs.build.outputs.PKGVER }}
    environment:
      name: pypi
      url: https://pypi.org/project/inotify-simple/${{ env.PKGVER }}
    permissions:
      id-token: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist

      - name: Publish on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true
